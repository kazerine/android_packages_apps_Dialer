/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.android.dialer.enrichedcall.historyquery.proto.nano;

/** This file is autogenerated, but javadoc required. */
@SuppressWarnings("hiding")
public final class HistoryResult
    extends com.google.protobuf.nano.ExtendableMessageNano<HistoryResult> {

  /** This file is autogenerated, but javadoc required. */
  // enum Type
  public interface Type {
    public static final int INCOMING_CALL_COMPOSER = 1;
    public static final int OUTGOING_CALL_COMPOSER = 2;
    public static final int INCOMING_POST_CALL = 3;
    public static final int OUTGOING_POST_CALL = 4;
  }

  private static volatile HistoryResult[] _emptyArray;

  public static HistoryResult[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new HistoryResult[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional .com.android.dialer.enrichedcall.historyquery.proto.HistoryResult.Type type = 1;
  public int type;

  // optional string text = 2;
  public java.lang.String text;

  // optional string image_uri = 4;
  public java.lang.String imageUri;

  // optional string image_content_type = 5;
  public java.lang.String imageContentType;

  // optional int64 timestamp = 7;
  public long timestamp;

  // @@protoc_insertion_point(class_scope:com.android.dialer.enrichedcall.historyquery.proto.HistoryResult)

  public HistoryResult() {
    clear();
  }

  public HistoryResult clear() {
    type =
        com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
            .INCOMING_CALL_COMPOSER;
    text = "";
    imageUri = "";
    imageContentType = "";
    timestamp = 0L;
    unknownFieldData = null;
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.type
        != com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
            .INCOMING_CALL_COMPOSER) {
      output.writeInt32(1, this.type);
    }
    if (this.text != null && !this.text.equals("")) {
      output.writeString(2, this.text);
    }
    if (this.imageUri != null && !this.imageUri.equals("")) {
      output.writeString(4, this.imageUri);
    }
    if (this.imageContentType != null && !this.imageContentType.equals("")) {
      output.writeString(5, this.imageContentType);
    }
    if (this.timestamp != 0L) {
      output.writeInt64(7, this.timestamp);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.type
        != com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
            .INCOMING_CALL_COMPOSER) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano.computeInt32Size(1, this.type);
    }
    if (this.text != null && !this.text.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano.computeStringSize(2, this.text);
    }
    if (this.imageUri != null && !this.imageUri.equals("")) {
      size +=
          com.google.protobuf.nano.CodedOutputByteBufferNano.computeStringSize(4, this.imageUri);
    }
    if (this.imageContentType != null && !this.imageContentType.equals("")) {
      size +=
          com.google.protobuf.nano.CodedOutputByteBufferNano.computeStringSize(
              5, this.imageContentType);
    }
    if (this.timestamp != 0L) {
      size +=
          com.google.protobuf.nano.CodedOutputByteBufferNano.computeInt64Size(7, this.timestamp);
    }
    return size;
  }

  @Override
  public HistoryResult mergeFrom(com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default:
          {
            if (!super.storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        case 8:
          {
            int initialPos = input.getPosition();
            int value = input.readInt32();
            switch (value) {
              case com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
                  .INCOMING_CALL_COMPOSER:
              case com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
                  .OUTGOING_CALL_COMPOSER:
              case com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
                  .INCOMING_POST_CALL:
              case com.android.dialer.enrichedcall.historyquery.proto.nano.HistoryResult.Type
                  .OUTGOING_POST_CALL:
                this.type = value;
                break;
              default:
                input.rewindToPosition(initialPos);
                storeUnknownField(input, tag);
                break;
            }
            break;
          }
        case 18:
          {
            this.text = input.readString();
            break;
          }
        case 34:
          {
            this.imageUri = input.readString();
            break;
          }
        case 42:
          {
            this.imageContentType = input.readString();
            break;
          }
        case 56:
          {
            this.timestamp = input.readInt64();
            break;
          }
      }
    }
  }

  public static HistoryResult parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new HistoryResult(), data);
  }

  public static HistoryResult parseFrom(com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new HistoryResult().mergeFrom(input);
  }
}
