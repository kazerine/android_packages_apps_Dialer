/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.android.dialer.logging.nano;

@SuppressWarnings("hiding")
public final class ReportingLocation extends
    com.google.protobuf.nano.ExtendableMessageNano<ReportingLocation> {

  // enum Type
  public interface Type {
    public static final int UNKNOWN_REPORTING_LOCATION = 0;
    public static final int CALL_LOG_HISTORY = 1;
    public static final int FEEDBACK_PROMPT = 2;
  }

  private static volatile ReportingLocation[] _emptyArray;
  public static ReportingLocation[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new ReportingLocation[0];
        }
      }
    }
    return _emptyArray;
  }

  // @@protoc_insertion_point(class_scope:com.android.dialer.logging.ReportingLocation)

  public ReportingLocation() {
    clear();
  }

  public ReportingLocation clear() {
    unknownFieldData = null;
    cachedSize = -1;
    return this;
  }

  @Override
  public ReportingLocation mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!super.storeUnknownField(input, tag)) {
            return this;
          }
          break;
        }
      }
    }
  }

  public static ReportingLocation parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new ReportingLocation(), data);
  }

  public static ReportingLocation parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new ReportingLocation().mergeFrom(input);
  }
}
